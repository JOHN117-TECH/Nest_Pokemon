# Especifica la imagen base para el contenedor. En este caso, es la imagen de Node.js 
FROM node:18-alpine3.15

# Set working directory
# Crea el directorio /var/www/pokedex si no existe. Este será el directorio de trabajo 
# donde se ubicará el código de la aplicación.
RUN mkdir -p /var/www/pokedex
# Cambia el directorio de trabajo actual al directorio recién creado. 
WORKDIR /var/www/pokedex

# Copiar el directorio y su contenido
# Copia todo el contenido del directorio local al contenedor en /var/www/pokedex
COPY . ./var/www/pokedex
# Copia archivos específicos (package.json, tsconfig.json, y tsconfig.build.json) al directorio de trabajo en el contenedor. 
COPY package.json tsconfig.json tsconfig.build.json /var/www/pokedex/
RUN npm install --prod
RUN npm build


# Dar permiso para ejecutar la applicación
# Crea un nuevo usuario llamado pokeuser sin contraseña para ejecutar la aplicación. 
# Esto es una práctica de seguridad para evitar ejecutar el contenedor con privilegios de root.
RUN adduser --disabled-password pokeuser
# Cambia el propietario del directorio /var/www/pokedex y todos sus archivos a pokeuser.
RUN chown -R pokeuser:pokeuser /var/www/pokedex
# Establece pokeuser como el usuario por defecto para ejecutar cualquier comando en adelante, lo que mejora la seguridad.
USER pokeuser

# Limpiar el caché
RUN npm cache clean --force

EXPOSE 3000
# Define el comando que se ejecutará al iniciar el contenedor. 
CMD [ "npm","start" ]